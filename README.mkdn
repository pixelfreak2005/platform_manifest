
#PixelDroid based on CyanogenMod with Resurrection Remix Modifications#
===================


[Join the Resurrection Remix Team](http://forum.resurrectionremix.com/index.php?topic=2037.new#new)

Getting Started
---------------
To get started with Android/PixelDroid, you'll need to get
familiar with [Git and Repo](http://source.android.com/source/version-control.html).

How To Build PixelDroid ROM for your device - Tutorial
--------
New Way to set up and build PixelDroid Rom.

refer to github.com/akhilnarang/scripts to setup build env

Once done, the source code should be already set up and you can head on to build RR by using the build script in the root of source code
 
so simply copy and paste this in a terminal window:

     $ bash build.sh

---

### Build Environment

- Tested and Working on any version of Ubuntu - 14.04,14.10,15.04 (64-bit)
- Any other distribution based of the Ubuntu Distro such as Lubuntu, Xubuntu and etc.
- Any form of Terminal
- Decent hardware (minimum of at least a dual core CPU and 8 GB of RAM)
- A storage unit of any kind (We recommend utilizing SSDs as Mechanical HDDs slow down the build proccess drastically and the minimum storage size is 70GB. Having more will be useful with CCache[More on that later])
- Required Packages should have been installed

### Required Packages
##### Simply copy and paste this in a terminal window:
[Hint: This command updates the Ubuntu Packages List (Install Listing) and install the required version of Java]

     $ sudo apt-get install openjdk-8-jdk

### Let that install and then proceed.

### More copy and paste:
[Hint: Running this command installs the other required packages to build android]

     $ sudo apt-get update && sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev openjdk-8-jre openjdk-8-jdk pngcrush schedtool libxml2 libxml2-utils xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev lib32readline-gplv2-dev gcc-multilib maven tmux screen w3m ncftp

### Getting the Source
- Making required directories
- Obtaining the repo binary
- Adding repo binary to your path
- Giving the repo binary proper permissions
- Initializing an empty repo
- Syncing the repo

Alright, so now we’re getting there. I have outlined the basics of what we’re about to do and broke them down as I know them. This is all pretty much going to be copy/paste so it’ll be fairly difficult to screw this up :)

##### Make directory for the repo binary

      $ mkdir ~/bin

##### Add directory for the repo binary to its path

      $ PATH=~/bin:$PATH

##### Downloading repo binary and placing it in the proper directory

      $ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo

##### Giving the repo binary the proper permissions

      $ chmod a+x ~/bin/repo

##### Creating directory for where the PF_RR repo will be stored and synced

      $ mkdir ~/PF_RR
      $ cd ~/PF_RR

##### Initializing the RR repo and downloading the manifest

      $  repo init -u https://github.com/pixelfreak2005/platform_manifest.git -b nougat-PF

##### Syncing the source
[Hint: This might take a long time as the source is ~20GB]

      $  repo sync -f --force-sync --no-clone-bundle

###Building the PixelDroid ROM
- Preparing Required Binaries and Device Drivers
- Setting Up CCache (Optional)
- Building Resurrection Remix

Congratulations on the succesfull build initialization! Now, we shall go ahead and prepare to build for your device!

##### Preparing PixelDroid ROM for devices
- Follow the AOSP Porting Instructions stated here to prepare the proprietary files for building for your device: (http://xda-university.com/as-a-developer/porting-aosp-roms-using-source-code)


##### maven compile stop fix
    $ echo QUIT | openssl s_client -showcerts -connect maven.cyanogenmod.org:443 > ssl.cyanogenmod.org.crt
    $ mv ssl.cyanogenmod.org.crt /usr/local/share/ca-certificates/
    $ update-ca-certificates --fresh
    
##### Java GC compile stop fix and more tweaks for compiling
    $ export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx8g"
    $ ./prebuilts/sdk/tools/jack-admin kill-server
    $./prebuilts/sdk/tools/jack-admin start-server
    
##### or write in bashrc file
    $ sudo nautilus -> serach the .bashrc file and open with gedit and save it
    
    export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"
    export PATH=$JAVA_HOME:$PATH
    alias sudo='sudo env PATH=$PATH'

    export USE_CCACHE=1
    export CCACHE_DIR=/home/pixelfreak/.ccache
    alias sudo='sudo env PATH=$PATH'

    export _JAVA_OPTIONS=-Xmx4096m
    export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx8g"
     
    
##### To build PixelDroid ROM
    $ cd PF_RR
    $ prebuilts/misc/linux-x86/ccache/ccache -M 100G
    $ . build/envsetup.sh && brunch cm_r7plus-userdebug && mka LANG=C -j4 bacon
    
The number before the letter G at the end specifies the amount of space CCache can use in your storage unit. As such, ensure that not too much of space is specified as this might result in unexpected errors although, the more storage you have, its recommended to have more CCache as it will increase the build times. Most efficient build systems are able to utilize CCache to about 120G or more.

If you found it, then congratulations! If you didn't, try retrying the build process but before doing so, ensure you do the following to make sure your next build is clean;

      $ cd ~/PF_RR
      $ make clean && make clobber && ccache -C
      $ repo sync --force-sync

After doing so, redo everything stated from the Building Section.

##### For those who successfully built PixelDroid
Well, Congratulations on your victory! Now, you have a .zip file that flashable to your device! Share it to the internet as you wish but be sure to contribute back and also give credits to the Resurrection Remix Team and its contributors!Also keep in mind that if an official build exists for a device, no unofficial builds should be released publicly. Do come and build Resurrection Remix another time as source code is routinely being improved upon. If you wish to contibute, feel free to make a pull request to the Ressurection Remix Team! See you again builder!Note:If you decide to create a thread on xda, please limit the thread to only one per device.more than one thread will not be allowed per device as it creates confusion amongst users and makes it hard for us to track bug reports.If you have unofficial builds, post them up on g+ so users can use and report issues in the post itself.

#install Rom on oppo R7Plus#

    - install fastboot and the phone drivers on the PC
    - hold  volume up and down and power for start fastboot
    - search your device in terminal/cmd with "fastboot devices"
    - if you see "<waiting for device>" , fastboot is not configured properly on your machine.
    - you must start this command in terminal/cmd "fastboot oem unlock"
    - command "fastboot devices"
    - command "fastboot boot your_recovery_image.img"
    - the phone should reboot in the twrp
    - copy the rom .zip file and gapps .zip file to the SD Card
    - go to install -> from sd card -> "rom".zip and second "gapps".zip
    - after install reboot to system and HAVE FUN



